#!/bin/sh

# Commit staged changes at specific date and/or time.
#
# Formats are as follows:
#  - YYYY-mm-dd HH:MM:SS
#  - 2 days ago, 2 hours ago, 20 minutes ago
#  - Any RFC 2822 and ISO 8601 compliant date formats
#
# Note: `coreutils` package must be installed on macOS (brew install coreutils)
# and the `gdate` command should yield current date.

date="$1"
subject="$2"
body="$3"

# Help

if [[ -z "$subject" ]]; then
  echo "cm: You should specify the date, commit subject (message), and (optionally) the body\n"

  echo "Usage: cm [date] [subject] [[body]]\n"

  echo "Examples:"
  echo "\$ cm 'now' 'Plant a tree' "
  echo "\$ cm '1 hour ago' 'Create yet another framework' 'Really cool framework' "
  echo "\$ cm '2019-11-11 12:35:18' 'Raise a kid'"

  exit 0
fi

# If date isn't specified, then use current date and time

if [[ -z "$date" ]]; then
  date=$(gdate)
fi

# Get timestamp to make it a bit more safe

timestamp=$(gdate -d "$date" +%s)

export GIT_AUTHOR_DATE
export GIT_COMMITTER_DATE

GIT_AUTHOR_DATE="$timestamp"
GIT_COMMITTER_DATE="$timestamp"

if [[ -z "$body" ]]; then
  git commit -m "$subject"
else
  git commit -m "$subject" -m "$body"
fi
